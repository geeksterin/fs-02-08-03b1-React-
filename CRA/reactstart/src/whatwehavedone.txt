[+] What is React
[+] Features Of React(Reusibility, SPA, Mutation Control)
[+] React Using CDN
[+] React.createElement()
[+] Creating components using the React.createElement()
[+] Babel(jsx compiler,cdn)
[+] Jsx(Limitations around Loops)
[+] Functional Components
[+] Rendering array using map function
[+] Props in cdn component
[+] How to pass props
[+] Props object
[+] Destructring of props
[+] Nesting of components
[+] Npm vs Npx
[+] Create-react-app ,create-vite, percel
[+] Folder structure
[+] How to create components?(Again)
[+] How to nest components?(multilevel nesting of components)
[+] Inline css
[+] External css and its problems(important)
[+] Module css
[+] React Fragments(<></> , <React.Fragment></React.Fragment> )
[+] How to add images to your project
[+] Event Listeners(if the event takes any arg we will be using arrow function)
[+] Props(Again)
[+] Props Driling
[+] Types Of Props
[+] Function As Props
[+] Virtual Dom vs Real Dom **...
[+] Iterative Diffing Algo And Reconciliation **..
[+] State
[+] UseState
[+] Pass state and setter function as props **...
[+] Conditional Rendering
[+] Short circuit
[+] SideEffects
[+] UseEffect **...
    [+] After Mounting And Every Updation Phase(No dependency array)
    [+] After Only Mounting Phase(Empty dependency array)
    [+] After Mounting And Specific Updation Phase(Specific dependency in dependency array)
    [+] After Mounting And Specific Updation Phase with Cleanup Function(Avoid leaks in code with Cleanup function)
[+] Axios
    [+] Use Axios Directly
    [+] Go with industry way, by creating service file
    [+] Get
    [+] Post
[+] React router dom(Mostly All)
    [+] Normal Routing
    [+] Nested Routing
    [+] UseNavigate
    [+] UseParams
[+] UseReducer
    [+] Normal state and action
    [+] Object State and Normal action
    [+] Object State and Object Action(Redux Way)
[+] Context API **...
    [+] What is context?why we need it?
    [+] Creating a context using React.createContext()
    [+] Provider and Consumer components 
    [+] Details About Provider (value={value})
    [+] Details About Consumer
        [+] Normal way of consuming valus
        [+] useContext Hook
    [+] useRef
        [+] How to use useRef, Mutable Objects. And it can hold values unlike varible in re redners
    [+] React Optimization
        [+] Key , Anti Index Pattern
        [+] useCallback Hook (to memoize a function)
        [+] useMemo(to memoize a return value of a function)
    [+] Redux 
        [+] Why redux?
        [+] Middleware(logger,redux-thunk)
        [+] Actions String
        [+] Actions Builder
        [+] Async Action Builders (redux-thunk)
        [+] Reducers
        [+] Dispatch
        [+] Store
        [+] Single src of truth in redux
    [+] react-redux
            [+] How to connet react app with redux
            [+] Provider(store={store})
            [+] Premitive way of consuming redux store values, mapStateToProps, mapDispathToProp, connect()
            [+] new way of consuming redux store value, useSelector(), useDispatch();

        



[-] Custom Hooks (!important)
    



